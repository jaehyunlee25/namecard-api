{"funcCalendar":"  function funcCalendar() {\r\n    const year = new Date().getFullYear();\r\n    const month = (new Date().getMonth() + 1).toString().addzero();\r\n    const mDate = new Date(year, new Date().getMonth(), \"15\");\r\n    mDate.setMonth(mDate.getMonth() + 1);\r\n    const nextMonth = (mDate.getMonth() + 1).toString().addzero();\r\n    const yearNextMonth = mDate.getFullYear().toString();\r\n    const lastDateNextMonth = new Date(\r\n      yearNextMonth,\r\n      nextMonth,\r\n      \"00\"\r\n    ).getDate();\r\n    const fulldateLastDateNextMonth = [\r\n      yearNextMonth,\r\n      nextMonth,\r\n      lastDateNextMonth,\r\n    ].join(\"-\");\r\n\r\n    $(\"#f_date_to\").val(fulldateLastDateNextMonth);\r\n    btnSearchGolf.click();\r\n    setTimeout(funcCancel, 1000);\r\n  }","funcCancel":"  function funcCancel() {\r\n    log(\"funcCancel\");\r\n    const els = data_list.getElementsByTagName(\"tr\");\r\n    const dictCourse = {\r\n      시스타18홀: \"단일\",\r\n    };\r\n    let target;\r\n    Array.from(els).forEach((el) => {\r\n      const param = el.children;\r\n      const elDate = param[2].innerText.split(\"-\").join(\"\");\r\n      const elTime = param[3].innerText.split(\":\").join(\"\");\r\n      const elCourse = param[1].innerText;\r\n      console.log(\"reserve cancel\", dictCourse[elCourse], elDate, elTime);\r\n      const fulldate = [year, month, date].join(\"\");\r\n      log(elDate, fulldate,\r\n        dictCourse[elCourse], course,\r\n        elTime, time);\r\n      if (\r\n        elDate == fulldate &&\r\n        dictCourse[elCourse] == course &&\r\n        elTime == time\r\n      )\r\n        target = el.children[6].getElementsByTagName(\"a\")[0];\r\n    });\r\n    log(target);\r\n    if (target) {\r\n      target.click();\r\n      setTimeout(funcEnd, 1000);\r\n    } else {\r\n      funcEnd();\r\n    }\r\n  }","funcEnd":"  function funcEnd() {\r\n    const strEnd = \"end of reserve/cancel\";\r\n    logParam.message = strEnd;\r\n    TZLOG(logParam, (data) => {\r\n      const ac = window.AndroidController;\r\n      if (ac) ac.message(strEnd);\r\n      location.href = \"logout.asp\";\r\n    });\r\n  }","funcLogin":"  function funcLogin() {  \r\n    log(\"funcLogin\");  \r\n    const tag = localStorage.getItem(\"TZ_LOGOUT\");\r\n    if (tag && new Date().getTime() - tag < 1000 * 10) return;\r\n    localStorage.setItem(\"TZ_LOGOUT\", new Date().getTime());\r\n\r\n    \r\nlogParam.sub_type = \"login\";\r\nmessage: \"start login\";\r\nTZLOG(logParam, (data) => {}); \r\nf_id.value = '${login_id}';\r\nf_pw.value = '${login_password}';\r\nbtnLogin.click(); \r\n  }","funcOut":"  function funcOut() {\r\n    return;\r\n  }","funcReserve":"  function funcReserve() {\r\n    log(\"funcReserve\");\r\n    const tag = localStorage.getItem(\"TZ_RESERVE\");\r\n    if (tag && new Date().getTime() - tag < 1000 * 5) {\r\n      funcEnd();\r\n      return;\r\n    }\r\n    localStorage.setItem(\"TZ_RESERVE\", new Date().getTime());\r\n\r\n    TZLOG(logParam, (data) => {\r\n      log(data);\r\n      funcCalendar();\r\n    });\r\n  }"}