{"LOGOUT":"  function LOGOUT() {\r\n    log(\"LOGOUT\");\r\n    location.href = \"/login/logout.asp\";\r\n  }","funcEnd":"  function funcEnd() {\r\n    log(\"funcEnd\");\r\n    const strEnd = \"end of reserve/reserve\";\r\n    logParam.message = strEnd;\r\n    TZLOG(logParam, (data) => {});\r\n    if (ac) ac.message(strEnd);\r\n  }","funcLogin":"function funcLogin() {\r\n  log(\"funcLogin\");\r\n  \r\n  const tag = localStorage.getItem(\"TZ_LOGIN\");\r\n  if (tag && new Date().getTime() - tag < 1000 * 5) return;\r\n  localStorage.setItem(\"TZ_LOGIN\", new Date().getTime());\r\n\r\n  TZLOG(logParam, (data) => {});  \r\n  keyword22.value = \"${login_id}\";\r\n  keyword222.value = \"${login_password}\";\r\n  chkLogValue(frmLogin,'in',frmLogin.mem_id, frmLogin.usr_pwd);\r\n  return;\r\n}","funcMain":"  function funcMain() {\r\n    log(\"funcMain\");\r\n    \r\n    funcEnd();\r\n    return;\r\n  }","funcOther":"  function funcOther() {\r\n    log(\"funcOther\");\r\n    const tag = lsg(\"TZ_OTHER\");\r\n    if (tag && new Date().getTime() - tag < 1000 * 10) return;\r\n    lss(\"TZ_OTHER\", new Date().getTime());\r\n\r\n    location.href = \"https://m.ariji.co.kr:444/membership/booking/time_calendar_form.asp\";\r\n  }","funcReserve":"  function funcReserve() {\r\n    log(\"funcReserve\");\r\n\r\n    const tag = localStorage.getItem(\"TZ_LOGOUT\");\r\n    if(tag && (new Date().getTime() - tag) < 1000 * 5) return;\r\n    localStorage.setItem(\"TZ_LOGOUT\", new Date().getTime());\r\n\r\n    TZLOG(logParam, (data) => {});\r\n    now_calendar.goSend(now_calendar.frmSend, fulldate, fulldate.dayNum(), \"2\");\r\n  }","funcTime":"  function funcTime() {\r\n    log(\"funcTime\");\r\n\r\n    const els = doc.gcn(\"btn btn-success\");\r\n    log(\"els\", els, els.length);\r\n    \r\n    let target;\r\n    Array.from(els).every((el) => {\r\n      const param = el.parentNode.attr(\"href\").inparen();\r\n      const [ , elCourse, elTime] = param;\r\n\r\n      log(dictCourse[course] == elCourse, time == elTime);\r\n      log(dictCourse[course], elCourse, time, elTime);\r\n      \r\n      if (dictCourse[course] == elCourse && time == elTime) \r\n        target = el.parentNode;\r\n      \r\n      return !target;\r\n    });\r\n\r\n    log(\"target\", target);\r\n    if (target) {\r\n      target.click();\r\n      timer(500, funcExec);\r\n    } else {\r\n      LOGOUT();\r\n    }\r\n  }"}