{"funcList":"  function funcList() {\r\n    log(\"funcList\");\r\n    LOGOUT();\r\n    return;\r\n  }","funcMain":"  function funcMain() {\r\n    log(\"funcMain\");\r\n    const tag = localStorage.getItem(\"TZ_MAIN\");\r\n    if (tag && new Date().getTime() - tag < 1000 * 10) {\r\n      funcEnd();\r\n      return;\r\n    }\r\n    localStorage.setItem(\"TZ_MAIN\", new Date().getTime());\r\n\r\n    location.href = \"https://www.adelscott.co.kr/_mobile/GolfRes/onepage/real_reservation.asp\";\r\n  }","funcOut":"  function funcOut() {\r\n    log(\"funcOut\");\r\n    funcEnd();\r\n    return;\r\n  }","funcOther":"  function funcOther() {\r\n    log(\"funcOther\");\r\n    const tag = localStorage.getItem(\"TZ_MAIN\");\r\n    if (tag && new Date().getTime() - tag < 1000 * 10) return;\r\n    localStorage.setItem(\"TZ_MAIN\", new Date().getTime());\r\n\r\n    location.href = \"https://www.adelscott.co.kr/_mobile/GolfRes/onepage/real_reservation.asp\";\r\n  }","funcReserve":"  function funcReserve() {\r\n    log(\"funcReserve\");\r\n\r\n    if (!suffix) return;\r\n\r\n    const suffixParam = (() => {\r\n      const result = {};\r\n      suffix.split(\"&\").forEach((item) => {\r\n        const dv = item.split(\"=\");\r\n        result[dv[0]] = dv[1];\r\n      });\r\n      return result;\r\n    })();\r\n\r\n    log(\"settype\", suffixParam[\"settype\"]);\r\n    if (suffixParam[\"settype\"] == \"\") {\r\n      log(\"calendar\");\r\n      funcDate();\r\n    } else if (suffixParam[\"settype\"] == \"T\") {\r\n      if(doc.gcn(\"cm_btn default\")[0]) {\r\n        funcExec();\r\n      } else {\r\n        funcTime();\r\n      }\r\n    } else {\r\n      return;\r\n    }\r\n  }","funcDate":"  function funcDate() {\r\n    log(\"funcDate\");\r\n\r\n    const tag = localStorage.getItem(\"TZ_LOGOUT\");\r\n    if (tag && new Date().getTime() - tag < 1000 * 5) return;\r\n    localStorage.setItem(\"TZ_LOGOUT\", new Date().getTime());\r\n\r\n    TZLOG(logParam, (data) => {});\r\n    let sign = fulldate.daySign();\r\n    if (sign != 1) sign = 2;\r\n    timefrom_change(fulldate, sign, fulldate.dayNum(), \"\", \"00\", \"T\");\r\n  }","funcTime":"  function funcTime() {\r\n    log(\"funcTime\");\r\n    \r\n    const els = doc.gcn(\"pointer\");\r\n    log(\"els\", els, els.length);\r\n\r\n    let target;\r\n    els.every((el) => {\r\n      const param = el.attr(\"onclick\").inparen();\r\n      const [, elCourse, elTime] = param;\r\n      const sign = dictCourse[course];\r\n\r\n      log(elCourse, sign, elTime, time);\r\n      log(elCourse == sign, elTime == time);\r\n      if (elCourse == sign && elTime == time) target = el;\r\n\r\n      return !target;\r\n    });\r\n\r\n    log(\"target\", target);\r\n    if (target) {\r\n      target.click();\r\n      timer(1000, funcExec);\r\n    } else {\r\n      LOGOUT();\r\n    }\r\n  }","funcExec":"  function funcExec() {\r\n    log(\"funcExec\");\r\n    doc.gcn(\"cm_btn default\")[0].click();\r\n  }","funcEnd":"  function funcEnd() {\r\n    log(\"funcEnd\");\r\n    const strEnd = \"end of reserve/reserve\";\r\n    logParam.message = strEnd;\r\n    TZLOG(logParam, (data) => {});\r\n    if (ac) ac.message(strEnd);\r\n  }","LOGOUT":"  function LOGOUT() {\r\n    log(\"LOGOUT\");\r\n    location.href = \"/_mobile/login/logout.asp\";\r\n  }"}